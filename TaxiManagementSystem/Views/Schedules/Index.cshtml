@model ScheduleViewModel

@{ ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_OwnerLayout.cshtml"; }
@{ var sId = Model.ScheduleId; }

<link href='~/lib/fullcalendar-5.7.2/lib/main.css' rel='stylesheet' />
<script src='~/lib/fullcalendar-5.7.2/lib/main.js'></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');
        var eventsList = JSON.parse('@Html.Raw(Json.Serialize(Model.Events))');
        var schduleList = JSON.parse('@Html.Raw(Json.Serialize(Model.AllSchedules))');

        var calendar = new FullCalendar.Calendar(calendarEl,
            {
                headerToolbar: {
                    left: 'prevYear,prev,next,nextYear today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                initialDate: Date.now(),
                navLinks: true, // can click day/week names to navigate views
                selectable: true,
                selectMirror: true,
                select: function(arg) {
                    var starting = arg.start.getUTCFullYear() +
                        '-' +
                        ('00' + (arg.start.getUTCMonth() + 1)).slice(-2) +
                        '-' +
                        ('00' + arg.start.getUTCDate()).slice(-2) +
                        'T' +
                        ('00' + arg.start.getUTCHours()).slice(-2) +
                        ':' +
                        ('00' + arg.start.getUTCMinutes()).slice(-2) +
                        ':' +
                        ('00' + arg.start.getUTCSeconds()).slice(-2);
                    var ending = arg.end.getUTCFullYear() +
                        '-' +
                        ('00' + (arg.end.getUTCMonth() + 1)).slice(-2) +
                        '-' +
                        ('00' + arg.end.getUTCDate()).slice(-2) +
                        'T' +
                        ('00' + arg.end.getUTCHours()).slice(-2) +
                        ':' +
                        ('00' + arg.end.getUTCMinutes()).slice(-2) +
                        ':' +
                        ('00' + arg.end.getUTCSeconds()).slice(-2);
                    document.getElementById("ShifTime").value = starting;
                    document.getElementById("ShifTimeEnd").value = ending;
                    document.getElementById("Comments").value = "";
                    document.getElementById("ScheduleId").value = 0;
                    $("#exampleModal").modal("show");
                    //calendar.addEvent({
                    //    title: "TEST",
                    //    start: arg.start,
                    //    end: arg.end,
                    //    allDay: arg.allDay
                    //});
                    calendar.unselect();
                },
                eventClick: function(arg) {
                    //if (confirm('Are you sure you want to delete this event?')) {
                    //    arg.event.remove();
                    //}

                    var result = schduleList.filter(function(element) {
                        if (element.scheduleId.toString() == arg.event.id) {
                            return element;
                        }
                    });

                    if (result != null) {
                        sId = parseInt(result[0].scheduleId);
                        document.getElementById("ScheduleIdEdit").value = parseInt(result[0].scheduleId);
                        document.getElementById("ShifTime").value = result[0].shiftTime.toLocaleString();
                        document.getElementById("ShifTimeEnd").value = result[0].shiftTimeEnd.toLocaleString();
                        document.getElementById("TaxiId").value = result[0].taxiId;
                        document.getElementById("DriverId").value = result[0].driverId;
                         document.getElementById("Comments").value = result[0].comments;
                        $('#exampleModal1').modal('show');
                    }


                    @*$.ajax(
                    {
                        type: "GET",
                        page: 1,
                        rp: 6,
                        url: '@Url.Action("Edit", "Schedules")' + "?id=" + arg.event.id,
                        dataType: "json",
                        success: function(data){
                            //call is successfully completed and we got result in data
                            try {
                                var output = JSON.parse(data);
                                alert(output);
                            } catch (e) {
                                alert("Output is not valid JSON: " + data);
                            }
                        },
                        error:function (xhr, ajaxOptions, thrownError){
                            //some errror, some show err msg to user and log the error
                            alert(xhr.responseText);

                        }
                    });*@


            },
            editable: true,
            dayMaxEvents: true, // allow "more" link when too many events
            events: eventsList
        });

        calendar.render();
    });
</script>
<style>

    #calendar {
        max-width: 1100px;
        margin: 0 auto;
    }
</style>

<div class="container">
    <div class=" row">
        <div class="col-sm-8"><h3> Driver's Roaster Scheduler</h3></div>
        <div class="col-sm-4">
        </div>
    </div>
    <div class=" row ">
        <div id="calendar"></div>
    </div>
</div>
@Html.Hidden("MyId", 0);

<!-- Modal -->
<div class="modal fade"
     id="exampleModal"
     tabindex="-1"
     aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                @if (@sId == 0)
                {
    <h5 class="modal-title" id="exampleModalLabel">Add Shift</h5> }
else
{

<h5 class="modal-title" id="exampleModalLabel">Edit Shift</h5>}

                <button type="button"
                        class="btn-close"
                        data-mdb-dismiss="modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-controller="Schedules" asp-action="AddShift">
                    <input type="hidden" asp-for="ScheduleId" value=@sId />
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="ShifTime" class="control-label required"></label>
                        <input asp-for="ShifTime" class="form-control" required type="datetime-local" />
                        <span asp-validation-for="ShifTime" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="ShifTimeEnd" class="control-label required"></label>
                        <input asp-for="ShifTimeEnd" class="form-control" required type="datetime-local" />
                        <span asp-validation-for="ShifTimeEnd" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => Model.TaxiId)<br />
                        @Html.DropDownListFor(x => Model.TaxiId, new SelectList(Model.AllTaxis, "TaxiId", "Registration"), new { style = "width: -webkit-fill-available;" })
                        <span asp-validation-for="TaxiId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => Model.DriverId)<br />
                        @Html.DropDownListFor(x => Model.DriverId, new SelectList(Model.AllDrivers, "DriverId", "FirstName"), new { style = "width: -webkit-fill-available;" })
                        <span asp-validation-for="DriverId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Comments" class="control-label"></label>
                        <input asp-for="Comments" class="form-control" />
                        <span asp-validation-for="Comments" class="text-danger"></span>
                    </div><br><br />
                    <div class="form-group">
                        @if (@sId == 0)
                        {
            <input type="submit" value="Add Shift" class="btn btn-success" /> }
        else
        {
<input type="submit" value="Edit Shift" class="btn btn-success" />}
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                @if (sId != 0)
                {
    <button type="button" class="btn btn-danger btn-sm px-3" onclick="location.href = '@Url.Action("Delete", "Schedules", new {id = @sId})'">Delete Shift</button>}
                <button type="button" class="btn btn-secondary" data-mdb-dismiss="modal">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade"
     id="exampleModal1"
     tabindex="-1"
     aria-labelledby="exampleModalLabel"
     aria-hidden="true">

    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">

                <h5 class="modal-title" id="exampleModalLabel">Edit Shift</h5>

                <button type="button"
                        class="btn-close"
                        data-mdb-dismiss="modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-controller="Schedules" asp-action="AddShift">
                    <input type="hidden" asp-for="ScheduleId" id="ScheduleIdEdit"/>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="ShifTime" class="control-label required"></label>
                        <input asp-for="ShifTime" class="form-control" required type="datetime-local"/>
                        <span asp-validation-for="ShifTime" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="ShifTimeEnd" class="control-label required"></label>
                        <input asp-for="ShifTimeEnd" class="form-control" required type="datetime-local"/>
                        <span asp-validation-for="ShifTimeEnd" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => Model.TaxiId)<br/>
                        @Html.DropDownListFor(x => Model.TaxiId, new SelectList(Model.AllTaxis, "TaxiId", "Registration"), new {style = "width: -webkit-fill-available;"})
                        <span asp-validation-for="TaxiId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => Model.DriverId)<br/>
                        @Html.DropDownListFor(x => Model.DriverId, new SelectList(Model.AllDrivers, "DriverId", "FirstName"), new {style = "width: -webkit-fill-available;"})
                        <span asp-validation-for="DriverId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Comments" class="control-label"></label>
                        <input asp-for="Comments" class="form-control"/>
                        <span asp-validation-for="Comments" class="text-danger"></span>
                    </div><br><br/>
                    <div class="form-group">

                        <input type="submit" value="Edit Shift" class="btn btn-success"/>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <form asp-controller="Schedules" asp-action="Delete" style="display: contents">
                <input type="hidden" id="ScheduleIdEdit"/>
                <button type="submit" class="btn btn-danger btn-sm px-3" >Delete Shift</button>
                </form>
                <button type="button" class="btn btn-secondary" data-mdb-dismiss="modal">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
