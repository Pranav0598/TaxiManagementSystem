@model ScheduleViewModel

@{ ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_OwnerLayout.cshtml"; }

<link href='~/lib/fullcalendar-5.7.2/lib/main.css' rel='stylesheet' />
<script src='~/lib/fullcalendar-5.7.2/lib/main.js'></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');
        var eventsList = JSON.parse('@Html.Raw(Json.Serialize(Model.Events))');
        var schduleList = JSON.parse('@Html.Raw(Json.Serialize(Model.AllSchedules))');

        var calendar = new FullCalendar.Calendar(calendarEl,
            {
                headerToolbar: {
                    left: 'prevYear,prev,next,nextYear today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                initialDate: Date.now(),
                navLinks: true, // can click day/week names to navigate views
                selectable: true,
                selectMirror: true,
                select: function(arg) {
                    var starting = arg.start.getUTCFullYear() +
                        '-' +
                        ('00' + (arg.start.getUTCMonth() + 1)).slice(-2) +
                        '-' +
                        ('00' + arg.start.getUTCDate()).slice(-2) +
                        'T' +
                        ('00' + arg.start.getUTCHours()).slice(-2) +
                        ':' +
                        ('00' + arg.start.getUTCMinutes()).slice(-2) +
                        ':' +
                        ('00' + arg.start.getUTCSeconds()).slice(-2);
                    var ending = arg.end.getUTCFullYear() +
                        '-' +
                        ('00' + (arg.end.getUTCMonth() + 1)).slice(-2) +
                        '-' +
                        ('00' + arg.end.getUTCDate()).slice(-2) +
                        'T' +
                        ('00' + arg.end.getUTCHours()).slice(-2) +
                        ':' +
                        ('00' + arg.end.getUTCMinutes()).slice(-2) +
                        ':' +
                        ('00' + arg.end.getUTCSeconds()).slice(-2);
                    document.getElementById("ShifTime").value = starting;
                    document.getElementById("ShifTimeEnd").value = ending;
                    document.getElementById("Comments").value = "";
                    $("#exampleModal").modal("show");
                    calendar.unselect();
                },
                eventClick: function(arg) {
                    var result = schduleList.filter(function(element) {
                        if (element.scheduleId.toString() == arg.event.id) {
                            return element;
                        }
                    });

                    if (result != null) {
                        document.getElementById("EditScheduleId").value = parseInt(result[0].scheduleId);
                        document.getElementById("EditShifTime").value = result[0].shiftTime.toLocaleString();
                        document.getElementById("EditShifTimeEnd").value = result[0].shiftTimeEnd.toLocaleString();
                        document.getElementById("EditTaxiId").value = result[0].taxiId;
                        document.getElementById("EditDriverId").value = result[0].driverId;
                        document.getElementById("EditComments").value = result[0].comments;
                        document.getElementById("DeleteScheduleId").value = parseInt(result[0].scheduleId);
                        $('#exampleModal1').modal('show');
                    }
            },
            editable: true,
            dayMaxEvents: true, // allow "more" link when too many events
            events: eventsList
        });
        calendar.render();
    });
</script>
<style>

    #calendar {
        max-width: 1100px;
        margin: 0 auto;
    }
</style>

<div class="container">
    <div class=" row">
        <div class="col-sm-8"><h3> Driver's Roaster Scheduler</h3></div>
        <div class="col-sm-4">
        </div>
    </div>
    @if (@Model.Status != null)
    {
        <div class="alert alert-success" role="alert">
            @Model.Status
        </div>
    }

    @if (@Model.Error != null)
    {
        <div class="alert alert-danger" role="alert">
            @Model.Error
        </div>
    }
    <div class=" row ">
        <div id="calendar"></div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">

                <h5 class="modal-title" id="exampleModalLabel">Add Shift</h5>
                <button type="button" class="btn-close" data-mdb-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-controller="Schedules" asp-action="AddShift">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="ShifTime" class="control-label required"></label>
                        <input asp-for="ShifTime" class="form-control" required type="datetime-local" />
                        <span asp-validation-for="ShifTime" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="ShifTimeEnd" class="control-label required"></label>
                        <input asp-for="ShifTimeEnd" class="form-control" required type="datetime-local" />
                        <span asp-validation-for="ShifTimeEnd" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => Model.TaxiId)<br />
                        @Html.DropDownListFor(x => Model.TaxiId, new SelectList(Model.AllTaxis, "TaxiId", "Registration"), new { style = "width: -webkit-fill-available;", required = "required" })
                        <span asp-validation-for="TaxiId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => Model.DriverId)<br />
                        @Html.DropDownListFor(x => Model.DriverId, new SelectList(Model.AllDrivers, "DriverId", "FirstName"), new { style = "width: -webkit-fill-available;", required = "required" })
                        <span asp-validation-for="DriverId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Comments" class="control-label"></label>
                        <input asp-for="Comments" class="form-control" />
                        <span asp-validation-for="Comments" class="text-danger"></span>
                    </div><br><br />
                    <div class="form-group">

                        <input type="submit" value="Add Shift" class="btn btn-success" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-mdb-dismiss="modal">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="exampleModal1" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Edit Shift</h5>
                <button type="button" class="btn-close" data-mdb-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-controller="Schedules" asp-action="Edit">
                    <input type="hidden" asp-for="EditScheduleId" />
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="EditShifTime" class="control-label required"></label>
                        <input asp-for="EditShifTime" class="form-control" required type="datetime-local" />
                        <span asp-validation-for="EditShifTime" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="EditShifTimeEnd" class="control-label required"></label>
                        <input asp-for="EditShifTimeEnd" class="form-control" required type="datetime-local" />
                        <span asp-validation-for="EditShifTimeEnd" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => Model.EditTaxiId)<br />
                        @Html.DropDownListFor(x => Model.EditTaxiId, new SelectList(Model.AllTaxis, "TaxiId", "Registration"), new { style = "width: -webkit-fill-available;", required = "required" })
                        <span asp-validation-for="EditTaxiId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => Model.EditDriverId)<br />
                        @Html.DropDownListFor(x => Model.EditDriverId, new SelectList(Model.AllDrivers, "DriverId", "FirstName"), new { style = "width: -webkit-fill-available;", required = "required" })
                        <span asp-validation-for="EditDriverId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="EditComments" class="control-label"></label>
                        <input asp-for="EditComments" class="form-control" />
                        <span asp-validation-for="EditComments" class="text-danger"></span>
                    </div><br><br />
                    <div class="form-group">
                        <input type="submit" value="Save Shift" class="btn btn-success" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <form asp-controller="Schedules" asp-action="DeleteShift" style="display: contents">
                    <input type="hidden" asp-for="DeleteScheduleId" />
                    <button type="submit" class="btn btn-danger" >Delete</button>
                </form>
                    <button type="button" class="btn btn-secondary" data-mdb-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
